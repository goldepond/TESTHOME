import 'package:flutter/material.dart';
import 'package:property/constants/app_constants.dart';
import 'package:property/api_request/firebase_service.dart';
import 'forgot_password_page.dart';
import 'signup_page.dart';

class LoginPage extends StatefulWidget {
  const LoginPage({super.key});

  @override
  State<LoginPage> createState() => _LoginPageState();
}

class _LoginPageState extends State<LoginPage> {
  final TextEditingController _emailController = TextEditingController();
  final TextEditingController _passwordController = TextEditingController();
  bool _isLoading = false;
  final FirebaseService _firebaseService = FirebaseService();

  @override
  void dispose() {
    _emailController.dispose();
    _passwordController.dispose();
    super.dispose();
  }

  Future<void> _login() async {
    print('üîê [LoginPage] Î°úÍ∑∏Ïù∏ ÏãúÎèÑ ÏãúÏûë');
    print('   ÏûÖÎ†•Îêú Ïù¥Î©îÏùº/ID: ${_emailController.text}');
    
    if (_emailController.text.isEmpty || _passwordController.text.isEmpty) {
      print('‚ö†Ô∏è [LoginPage] Ïù¥Î©îÏùº ÎòêÎäî ÎπÑÎ∞ÄÎ≤àÌò∏Í∞Ä ÎπÑÏñ¥ÏûàÏùå');
      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(content: Text('Ïù¥Î©îÏùºÍ≥º ÎπÑÎ∞ÄÎ≤àÌò∏Î•º ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.')),
      );
      return;
    }

    setState(() {
      _isLoading = true;
    });

    try {
      print('üîê [LoginPage] Firebase Ïù∏Ï¶ù Ìò∏Ï∂ú Ï§ë...');
      final userData = await _firebaseService.authenticateUser(
        _emailController.text,
        _passwordController.text,
      );

      print('üîê [LoginPage] Firebase Ïù∏Ï¶ù Í≤∞Í≥º: ${userData != null ? "ÏÑ±Í≥µ" : "Ïã§Ìå®"}');
      if (userData != null) {
        print('   userData: $userData');
      }

      if (userData != null && mounted) {
        final userId = userData['id'] ?? userData['uid'] ?? _emailController.text;
        final userName = userData['name'] ?? userId;
        
        print('‚úÖ [LoginPage] Ïù∏Ï¶ù ÏÑ±Í≥µ!');
        print('   UserID: $userId');
        print('   UserName: $userName');
        
        print('üë§ [LoginPage] ÏùºÎ∞ò ÏÇ¨Ïö©ÏûêÎ°ú Î°úÍ∑∏Ïù∏ - Îç∞Ïù¥ÌÑ∞ Î∞òÌôò');
        print('   Î∞òÌôò Îç∞Ïù¥ÌÑ∞: {userId: $userId, userName: $userName}');
        // Î°úÍ∑∏Ïù∏ Ï†ïÎ≥¥Î•º Î∞òÌôòÌïòÍ≥† Ïù¥Ï†Ñ ÌéòÏù¥ÏßÄÎ°ú ÎèåÏïÑÍ∞ÄÍ∏∞
        Navigator.of(context).pop({
          'userId': userId,
          'userName': userName,
        });
        print('‚úÖ [LoginPage] Navigator.pop() ÏôÑÎ£å');
      } else if (mounted) {
        print('‚ùå [LoginPage] Ïù∏Ï¶ù Ïã§Ìå® - userData is null');
        ScaffoldMessenger.of(context).showSnackBar(
          const SnackBar(
            content: Text('Î°úÍ∑∏Ïù∏Ïóê Ïã§Ìå®ÌñàÏäµÎãàÎã§. Ïù¥Î©îÏùºÍ≥º ÎπÑÎ∞ÄÎ≤àÌò∏Î•º ÌôïÏù∏Ìï¥Ï£ºÏÑ∏Ïöî.'),
            backgroundColor: Colors.red,
          ),
        );
      }
    } catch (e, stackTrace) {
      print('‚ùå [LoginPage] Î°úÍ∑∏Ïù∏ Ï§ë ÏòàÏô∏ Î∞úÏÉù: $e');
      print('   Stack trace: $stackTrace');
      if (mounted) {
        ScaffoldMessenger.of(context).showSnackBar(
          SnackBar(
            content: Text('Î°úÍ∑∏Ïù∏ Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§: $e'),
            backgroundColor: Colors.red,
          ),
        );
      }
    } finally {
      if (mounted) {
        setState(() {
          _isLoading = false;
        });
      }
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Container(
        decoration: const BoxDecoration(
          gradient: LinearGradient(
            begin: Alignment.topLeft,
            end: Alignment.bottomRight,
            colors: [AppColors.kGradientStart, AppColors.kGradientEnd],
          ),
        ),
        child: SafeArea(
          child: Stack(
            children: [
              // Îí§Î°úÍ∞ÄÍ∏∞ Î≤ÑÌäº
              Positioned(
                top: 16,
                left: 16,
                child: IconButton(
                  icon: const Icon(Icons.arrow_back, color: Colors.white, size: 28),
                  onPressed: () => Navigator.of(context).pop(),
                ),
              ),
              // Î°úÍ∑∏Ïù∏ Ìèº
              Center(
                child: SingleChildScrollView(
                  padding: const EdgeInsets.all(24),
                  child: Column(
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: [
                  // Î°úÍ≥† ÏòÅÏó≠
                  Container(
                    padding: const EdgeInsets.all(20),
                    decoration: BoxDecoration(
                      color: Colors.white,
                      borderRadius: BorderRadius.circular(20),
                      boxShadow: [
                        BoxShadow(
                          color: Colors.black.withValues(alpha:0.1),
                          blurRadius: 10,
                          offset: const Offset(0, 5),
                        ),
                      ],
                    ),
                    child: const Column(
                      children: [
                        SizedBox(height: 16),
                        Text(
                          'MyHome',
                          style: TextStyle(
                            fontSize: 28,
                            fontWeight: FontWeight.bold,
                            color: AppColors.kPrimary,
                          ),
                        ),
                        SizedBox(height: 8),
                        Text(
                          'ÏâΩÍ≥† Îπ†Î•∏ Î∂ÄÎèôÏÇ∞ ÏÉÅÎã¥',
                          style: TextStyle(
                            fontSize: 16,
                            color: AppColors.kDarkBrown,
                          ),
                        ),
                      ],
                    ),
                  ),
                  const SizedBox(height: 40),
                  
                  // Î°úÍ∑∏Ïù∏ Ìèº
                  Container(
                    padding: const EdgeInsets.all(24),
                    decoration: BoxDecoration(
                      color: Colors.white,
                      borderRadius: BorderRadius.circular(20),
                      boxShadow: [
                        BoxShadow(
                          color: Colors.black.withValues(alpha:0.1),
                          blurRadius: 10,
                          offset: const Offset(0, 5),
                        ),
                      ],
                    ),
                    child: Column(
                      children: [
                        const Text(
                          'Î°úÍ∑∏Ïù∏',
                          style: TextStyle(
                            fontSize: 24,
                            fontWeight: FontWeight.bold,
                            color: AppColors.kBrown,
                          ),
                        ),
                        const SizedBox(height: 24),
                        
                        // Ïù¥Î©îÏùº ÏûÖÎ†•
                        TextField(
                          controller: _emailController,
                          keyboardType: TextInputType.emailAddress,
                          decoration: const InputDecoration(
                            labelText: 'Ïù¥Î©îÏùº',
                            hintText: 'example@email.com',
                            prefixIcon: Icon(Icons.email, color: AppColors.kBrown),
                            border: OutlineInputBorder(
                              borderRadius: BorderRadius.all(Radius.circular(12)),
                            ),
                            focusedBorder: OutlineInputBorder(
                              borderRadius: BorderRadius.all(Radius.circular(12)),
                              borderSide: BorderSide(color: AppColors.kBrown, width: 2),
                            ),
                          ),
                        ),
                        const SizedBox(height: 16),
                        
                        // ÎπÑÎ∞ÄÎ≤àÌò∏ ÏûÖÎ†•
                        TextField(
                          controller: _passwordController,
                          obscureText: true,
                          decoration: const InputDecoration(
                            labelText: 'ÎπÑÎ∞ÄÎ≤àÌò∏',
                            prefixIcon: Icon(Icons.lock, color: AppColors.kBrown),
                            border: OutlineInputBorder(
                              borderRadius: BorderRadius.all(Radius.circular(12)),
                            ),
                            focusedBorder: OutlineInputBorder(
                              borderRadius: BorderRadius.all(Radius.circular(12)),
                              borderSide: BorderSide(color: AppColors.kBrown, width: 2),
                            ),
                          ),
                        ),
                        const SizedBox(height: 24),
                        
                        // Î°úÍ∑∏Ïù∏ Î≤ÑÌäº
                        SizedBox(
                          width: double.infinity,
                          height: 50,
                          child: ElevatedButton(
                            onPressed: _isLoading ? null : _login,
                            style: ElevatedButton.styleFrom(
                              backgroundColor: AppColors.kBrown,
                              foregroundColor: Colors.white,
                              shape: RoundedRectangleBorder(
                                borderRadius: BorderRadius.circular(12),
                              ),
                              textStyle: const TextStyle(
                                fontSize: 18,
                                fontWeight: FontWeight.bold,
                              ),
                            ),
                            child: _isLoading
                                ? const SizedBox(
                                    height: 20,
                                    width: 20,
                                    child: CircularProgressIndicator(
                                      strokeWidth: 2,
                                      valueColor: AlwaysStoppedAnimation<Color>(Colors.white),
                                    ),
                                  )
                                : const Text('Î°úÍ∑∏Ïù∏'),
                          ),
                        ),
                        const SizedBox(height: 16),
                        
                        // ÎπÑÎ∞ÄÎ≤àÌò∏ Ï∞æÍ∏∞ ÎßÅÌÅ¨
                        TextButton(
                          onPressed: () {
                            Navigator.push(
                              context,
                              MaterialPageRoute(
                                builder: (context) => const ForgotPasswordPage(),
                              ),
                            );
                          },
                          child: const Text(
                            'ÎπÑÎ∞ÄÎ≤àÌò∏Î•º ÏûäÏúºÏÖ®ÎÇòÏöî?',
                            style: TextStyle(
                              color: Colors.grey,
                              fontSize: 14,
                              decoration: TextDecoration.underline,
                            ),
                          ),
                        ),
                        const SizedBox(height: 8),
                        
                        // ÌöåÏõêÍ∞ÄÏûÖ ÎßÅÌÅ¨
                        Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            const Text(
                              'Í≥ÑÏ†ïÏù¥ ÏóÜÏúºÏã†Í∞ÄÏöî?',
                              style: TextStyle(
                                color: Colors.grey,
                                fontSize: 14,
                              ),
                            ),
                            TextButton(
                              onPressed: () {
                                Navigator.push(
                                  context,
                                  MaterialPageRoute(
                                    builder: (context) => const SignupPage(),
                                  ),
                                );
                              },
                              child: const Text(
                                'ÌöåÏõêÍ∞ÄÏûÖ',
                                style: TextStyle(
                                  color: AppColors.kBrown,
                                  fontSize: 14,
                                  fontWeight: FontWeight.bold,
                                ),
                              ),
                            ),
                          ],
                        ),
                      ],
                    ),
                  ),
                    ],
                  ),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
} 